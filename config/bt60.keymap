#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
	behaviors {
        td0: toggle_dvorak {
            compatible = "zmk,behavior-tap-dance";
            label = "toggle_dvorak";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&mo 1>, <&mo 1>, <&to 2>;
        };
        td1: untoggle_dvorak {
            compatible = "zmk,behavior-tap-dance";
            label = "untoggle_dvorak";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&mo 1>, <&mo 1>, <&to 0>;
        };
        td2: caps_quickevent {
            compatible = "zmk,behavior-tap-dance";
            label = "caps_quickevent";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&none>, <&kp CAPS>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// ------------------------------------------------------------------------------------------
				// |  ESC  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP
				// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |        |
				// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |  #  | ENTER |
				// |  SHIFT|  \ |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | / | SHIFT | UP | SHIFT |
				// |  CTL  |  WIN  |  ALT  |            SPACE               | RCTL | FN | LEFT | DOWN | RIGHT|
				// ------------------------------------------------------------------------------------------
			bindings = <
				&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8   &kp N9 &kp N0  &kp MINUS &kp EQUAL &kp BSPC
				&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp  I    &kp  O  &kp  P   &kp LBKT &kp RBKT
				&td2  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp  K    &kp  L  &kp SEMI &kp SQT &kp NON_US_HASH  &kp RET
				&kp LSHFT &kp NON_US_BSLH &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT &kp UP &kp RSHFT
				&kp LCTRL &kp LGUI &kp LALT            &kp SPACE                          &kp RCTRL  &td0 &kp LEFT &kp DOWN    &kp RIGHT
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		raise {
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans 
			bindings = <
				&kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &rgb_ug RGB_TOG &kp PG_UP &kp PG_DN
				&bootloader &trans &trans &trans &trans &trans &trans &kp C_PP &trans &trans &trans  &trans  &kp C_MUTE  &kp K_APP
				&trans &trans &trans &trans &trans &trans &trans &trans &kp C_STOP &trans &trans &trans &kp HOME &kp C_VOL_UP  &kp END
				&trans &trans &trans                 &trans                                 &mo 3 &trans &kp C_PREV &kp C_VOL_DN &kp C_NEXT  
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
        dvorak {
            bindings = <
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
                //&trans &trans &trans &trans &trans &trans &trans &trans &trans 
                &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp  N8   &kp  N9 &kp  N0  &kp LBKT &kp RBKT &kp BSPC
				&kp TAB  &kp SQT  &kp COMMA  &kp DOT  &kp P  &kp Y  &kp F  &kp G  &kp C     &kp R   &kp L    &kp FSLH &kp EQUAL
				&td2  &kp A  &kp O  &kp E  &kp U  &kp I  &kp D  &kp H  &kp  T    &kp N   &kp S &kp MINUS &kp NON_US_HASH  &kp RET
				&kp LSHFT &kp NON_US_BSLH &kp SEMI  &kp Q  &kp J  &kp K   &kp X  &kp B  &kp M   &kp W  &kp V  &kp Z  &kp RSHFT &kp UP &kp RSHFT
				&kp LCTRL &kp LGUI &kp LALT            &kp SPACE                          &kp RCTRL  &td1 &kp LEFT &kp DOWN    &kp RIGHT
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
		bluetoothmouse {
			bindings = <
			&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans &trans &trans 
			&trans &trans &trans &trans &trans &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &trans &trans &trans &trans &trans 
        	&trans &trans &trans &trans &trans &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &trans &trans &trans &trans &trans &trans 
            &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans 
            &trans &trans &trans &trans &trans &trans &trans &trans &trans 
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		
                
	};
};
